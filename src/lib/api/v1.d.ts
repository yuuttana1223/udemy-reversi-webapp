/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            games?: {
                                /** @example 1 */
                                id?: number;
                                /** @example 1 */
                                darkMoveCount?: number;
                                /** @example 1 */
                                lightMoveCount?: number;
                                /** @example 1 */
                                winnerDisc?: number;
                                /** @example 2021-01-01T00:00:00Z */
                                startedAt?: string;
                                /** @example 2021-01-01T00:00:00Z */
                                endedAt?: string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/games/latest/turns/{turnCount}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                turnCount: number;
            };
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    turnCount: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example 1 */
                            turnCount?: number;
                            /** @example [
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         1,
                             *         2,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         2,
                             *         1,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ],
                             *       [
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0,
                             *         0
                             *       ]
                             *     ] */
                            board?: unknown[];
                            /** @example 1 */
                            nextDisc?: number;
                            /** @example 1 */
                            winnerDisc?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/games/latest/turns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @example 1 */
                        turnCount?: number;
                        move?: {
                            /** @example 1 */
                            disc?: number;
                            /** @example 1 */
                            x?: number;
                            /** @example 1 */
                            y?: number;
                        };
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
